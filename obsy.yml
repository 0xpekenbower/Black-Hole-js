version: "3.9"

services:
  setup:
    image: blackholejs/setup:latest
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

  elasticsearch:
    image: blackholejs/elasticsearch:latest
    env_file:
      - .env
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data:Z
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

  logstash:
    image: blackholejs/logstash:latest
    env_file:
      - .env
    environment:
      - LOGSTASH_PASSWORD=${LOGSTASH_PASSWORD}
      - LOGSTASH_INTERNAL_PASSWORD=${LOGSTASH_INTERNAL_PASSWORD}
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

  kibana:
    image: blackholejs/kibana:latest
    env_file:
      - .env
    ports:
      - 5601:5601
    environment:
      - KIBANA_SYSTEM_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

  vector:
    image: blackholejs/vector:latest
    volumes:
      - logs_data_vector:/var/lib/vector:rw
      - logs:/var/log/containers:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 9000:9000
      - 8686:8686
    env_file:
      - .env
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - VECTOR_LOG=info
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

volumes:
  elasticsearch:
  logs_data_vector:
  logs:

networks:
  blackholejs:
    external: true