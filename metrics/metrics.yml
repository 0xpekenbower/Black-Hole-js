services:

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    container_name: cadvisor
    restart: on-failure
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - blackholejs

  node_exporter:
    image: prom/node-exporter:v1.9.1
    container_name: node_exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /run/systemd:/run/systemd:ro
    command:
      - --path.procfs=/host/proc
      - --path.rootfs=/rootfs
      - --path.sysfs=/host/sys
      - --collector.processes
      - --collector.systemd
      - --collector.filesystem
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - blackholejs
    pid: host
    privileged: true

  redis_exporter:
    container_name: redis_exporter
    image: bitnami/redis-exporter:1.73.0
    ports:
      - "${REDIS_EXPORTER_PORT:-9121}:9121"
    environment:
      REDIS_ADDR: "redis://redis-hole:6379"
    env_file:
      - .env
    restart: on-failure
    networks:
      - blackholejs

  postgres_exporter:
    container_name: postgres_exporter
    image: bitnami/postgres-exporter:0.17.0
    ports:
      - "${POSTGRES_EXPORTER_PORT:-9187}:9187"
    environment:
      DATA_SOURCE_NAME: "${DATA_SOURCE_NAME}"
    env_file:
      - .env
    restart: on-failure
    networks:
      - blackholejs
    # volumes:
      # - ./infra/config/postgres-exporter-config.yml:/opt/bitnami/postgres-exporter/config.yml:ro

  kafka-exporter:
    container_name: kafka-exporter
    image: danielqsj/kafka-exporter 
    command: ["--kafka.server=kafka:9092"]
    ports:
      - 9308:9308
    environment:
      - KAFKA_BROKERS=kafka:9092
    networks:
      - blackholejs

  nginx-exporter:
    container_name: nginx-exporter
    image: nginx/nginx-prometheus-exporter:1.4
    ports:
      - "9113:9113"
    networks:
      - blackholejs
    restart: on-failure
    command:
      - --nginx.scrape-uri=http://nginx:80/stub_status

  prometheus:
    build:
      context: ./metrics/prometheus
      dockerfile: Dockerfile
    container_name: prometheus
    restart: on-failure
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    networks:
      - blackholejs

  grafana:
    build:
      context: ./metrics/grafana
      dockerfile: Dockerfile
    container_name: grafana
    restart: on-failure
    ports:
      - "7050:7050"
    env_file:
      - ./.env
    networks:
      - blackholejs



volumes:
  prometheus_data:
  grafana_data:

networks:
  blackholejs:
    external: true