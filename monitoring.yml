version: "3.9"

services:
  prometheus:
    image: blackholejs/prometheus:latest
    volumes:
      - prometheus_data:/prometheus
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

  grafana:
    image: blackholejs/grafana:latest
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

  cadvisor:
    image: blackholejs/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

  node_exporter:
    image: blackholejs/node_exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /run/systemd:/run/systemd:ro
    command:
      - --path.procfs=/host/proc
      - --path.rootfs=/rootfs
      - --path.sysfs=/host/sys
      - --collector.processes
      - --collector.systemd
      - --collector.filesystem
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

  redis_exporter:
    image: blackholejs/redis_exporter:latest
    env_file:
      - .env
    environment:
      - REDIS_ADDR=redis://redis:6379
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

  postgres_exporter:
    image: blackholejs/postgres_exporter:latest
    env_file:
      - .env
    environment:
      - DATA_SOURCE_NAME=${DATA_SOURCE_NAME}
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

  kafka_exporter:
    image: blackholejs/kafka_exporter:latest
    command: ["--kafka.server=kafka:9092"]
    environment:
      - KAFKA_BROKERS=kafka:9092
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

  nginx_exporter:
    image: blackholejs/nginx_exporter:latest
    command:
      - --nginx.scrape-uri=http://nginx:80/stub_status
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - blackholejs

volumes:
  prometheus_data:

networks:
  blackholejs:
    external: true
