services:

  redis:
    container_name: redis-hole
    build:
      context: ./infra/dockerfiles
      dockerfile: Dockerfile.rd
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    env_file:
      - .env
    restart: on-failure
    networks:
      - blackholejs

  postgres_db:
    container_name: postgres_db
    # build:
    #   context: ./infra/dockerfiles
    #   dockerfile: Dockerfile.pg
    image: postgres:17.5-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: on-failure
    networks:
      - blackholejs

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:9.4.0
    ports:
      - 8087:80
    networks:
      - blackholejs
    environment:
      - 'PGADMIN_DEFAULT_EMAIL=abdellahelmrabet101@gmail.com'
      - 'PGADMIN_DEFAULT_PASSWORD=6032WW'

#https://betterstack.com/community/guides/logging/how-to-view-and-configure-nginx-access-and-error-logs/#step-4-structuring-nginx-access-logs
  nginx:
    container_name: nginx
    build:
      context: ./infra/dockerfiles
      dockerfile: Dockerfile.ng
    ports:
      - "6969:80"
    volumes:
      - ./infra/config/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./infra/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/config/502.html:/etc/nginx/conf.d/502.html:ro
      - logs_data_nginx:/var/log/nginx:rw
    # environment:
    #   - NGINX_ENTRYPOINT_QUIET_LOGS=0
    # command: >
    #   sh -c "mkdir -p /var/log/nginx &&
    #          rm -f /var/log/nginx/access.log /var/log/nginx/error.log &&
    #          touch /var/log/nginx/access.log /var/log/nginx/frontend-error.log /var/log/nginx/api-access.log /var/log/nginx/api-error.log /var/log/nginx/error.log &&
    #          chmod 666 /var/log/nginx/*.log &&
    #          chown -R nginx:nginx /var/log/nginx &&
    #          ls -la /var/log/nginx &&
    #          nginx -g 'daemon off;'"
    env_file:
      - .env
    restart: on-failure
    networks:
      - blackholejs

  kafka:
    build:
      context: ./infra/dockerfiles
      dockerfile: Dockerfile.kf
    container_name: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "9092:9092"
    restart: on-failure
    networks:
      - blackholejs

  gateway:
    container_name: gateway
    image: gateway
    build:
      context: ./infra/gateway/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./infra/gateway:/gateway
      - /gateway/node_modules
    env_file:
      - .env
    restart: on-failure
    networks:
      - blackholejs

volumes:
  redis_data:
  postgres_data:
  kafka_data:
  logs_data_nginx:
  
networks:
  blackholejs:
    external: true