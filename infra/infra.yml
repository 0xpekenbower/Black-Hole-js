services:

  redis:
    container_name: redis-hole
    image: redis:8.0-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    env_file:
      - .env
    restart: on-failure
    networks:
      - blackholejs

  postgres_db:
    container_name: postgres_db
    image: postgres:17.5-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: on-failure
    networks:
      - blackholejs

#https://betterstack.com/community/guides/logging/how-to-view-and-configure-nginx-access-and-error-logs/#step-4-structuring-nginx-access-logs
  nginx:
    container_name: nginx
    image: nginx:1.28-alpine
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
    volumes:
      - ./infra/config/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./infra/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/config/502.html:/etc/nginx/conf.d/502.html:ro
      - ./infra/logs/nginx:/var/log/nginx
    environment:
      - NGINX_ENTRYPOINT_QUIET_LOGS=1
    env_file:
      - .env
    restart: on-failure
    networks:
      - blackholejs

  gateway:
    container_name: gateway
    image: gateway
    build:
      context: ./infra/gateway/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./infra/gateway:/gateway
      - /gateway/node_modules
    env_file:
      - .env
    restart: on-failure
    networks:
      - blackholejs

volumes:
  redis_data:
  postgres_data:

networks:
  blackholejs:
    external: true