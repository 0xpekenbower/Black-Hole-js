# For WebSocket proxying (Grafana live)
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

resolver 127.0.0.11 valid=60s;

server {
  # listen 80;
  # server_name blackholejs.art;
  # root /usr/share/nginx/html;
  # index index.html index.htm;


  # location /.well-known/acme-challenge/ {
  #   root /etc/nginx/certs;
  # }

  listen 443 ssl;
  server_name blackholejs.art www.blackholejs.art;

  ssl_certificate     /etc/nginx/certs/fullchain.pem;
  ssl_certificate_key /etc/nginx/certs/privkey.pem;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers HIGH:!aNULL:!MD5;

  # Optional: HSTS
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  root /usr/share/nginx/html;
  index index.html index.htm;

  location /stub_status {
    stub_status;
    allow 127.0.0.1;
    allow ::1;
    allow all;
    deny all;
  }
  error_page 502 503 504 /502.html;
  location = /502.html {
    root /etc/nginx/conf.d;
    internal;
    add_header Content-Type text/html;
  }

  set $grafana_upstream "grafana:3000";
  set $prometheus_upstream "prometheus:9090";
  set $gateway_upstream "gateway:8000";
  set $kibana_upstream "kibana:5601";
  set $frontend_upstream "frontend:3000";
  set $pgadmin_upstream "pgadmin:8087";
  set $game_upstream "game:8004";
  set $kafka_ui_upstream "kafka-ui:8090";
  # set $gateway_upstream "core_gateway:8000";
  # set $frontend_upstream "core_frontend:3000";
  # set $kibana_upstream "obsy_kibana:5601";
  # set $pgadmin_upstream "core_pgadmin:8087";
  # set $grafana_upstream "monitoring_grafana:3000";
  # set $prometheus_upstream "monitoring_prometheus:9090";

  location /grafana/ {
    proxy_set_header Host $host;
    proxy_pass http://$grafana_upstream;
    proxy_intercept_errors on;
  }

  location /pgadmin4/ {
    proxy_set_header X-Script-Name /pgadmin4;
    proxy_set_header Host $host;
    proxy_pass http://$pgadmin_upstream;
    proxy_redirect off;
    proxy_intercept_errors on;
  }
  
  location /grafana/api/live/ {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_pass http://$grafana_upstream;
    proxy_intercept_errors on;
  }

  location /prometheus {
    proxy_set_header Host $host;
    proxy_pass http://$prometheus_upstream;
    proxy_intercept_errors on;
  }


  location /game/ {
      proxy_pass http://$game_upstream/;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;

      proxy_read_timeout 60s;
      proxy_send_timeout 60s;
      proxy_connect_timeout 60s;

      proxy_intercept_errors on;
  }

  # Gateway API routes
  location /api/ {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket support
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_pass http://$gateway_upstream;
    proxy_intercept_errors on;
  }

  # Socket.IO path for gateway
  location /socket.io/ {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket support
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    # Longer timeouts for WebSocket connections
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    proxy_pass http://$gateway_upstream/socket.io/;
    proxy_intercept_errors on;
  }

  # Special handling for Socket.IO path
  location /api/gateway/socket.io/ {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket support
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    # Longer timeouts for WebSocket connections
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    proxy_pass http://$gateway_upstream/api/gateway/socket.io/;
    proxy_intercept_errors on;
  }

  location = /api {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    proxy_connect_timeout 10s;
    proxy_send_timeout 10s;
    proxy_read_timeout 10s;
    
    proxy_pass http://$gateway_upstream;
    
    proxy_intercept_errors on;
  }

  location /kibana/ {
    proxy_set_header Host $host;
    proxy_pass http://$kibana_upstream;
    proxy_intercept_errors on;
  }

  location /kafka-ui/ {
    proxy_set_header Host $host;
    proxy_pass http://$kafka_ui_upstream;
    proxy_intercept_errors on;
  }

  

  # NextJS proxy 
  location / {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Next.js specific headers
    proxy_set_header X-NextJS-Data 1;
    
    # WebSocket support for Next.js
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    # Timeouts
    proxy_connect_timeout 25s;
    proxy_send_timeout 25s;
    proxy_read_timeout 25s;
    
    proxy_pass http://$frontend_upstream;
    proxy_intercept_errors on;
  }
}